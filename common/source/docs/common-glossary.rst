.. _common-glossary:

========
Glossary
========

.. note::

   The glossary is not indexed. It is in alphabetical order so just
   scroll down to find the topic of interest.

**2.4 Ghz**: The frequency used by digital (spread spectrum) radio
communications in our applications, including 2.4Ghz RC, Bluetooth and
some video transmission equipment. This is a different band than the
older 72 Mhz band that is used for analog RC communications. To avoid
radio frequency conflict is it often a good idea to use 72 Mhz radio
equipment when you are using 2.4 Ghz onboard video transmitters, or use
900 Mhz video when using 2.4 Ghz RC equipment.

**AGL**: Altitude above ground level

**AHRS**: Attitude Heading Reference System. An IMU (see below) plus the
code to interpret the output from its sensors to establish a plane's XYZ
and heading orientation.

**APM**: `ArduPilotMega <https://www.sparkfun.com/products/retired/9710>`__.

**AMA**: Academy of Model Aeronautics. The main US model aircraft
association. The AMA works closely with the Federal Aviation
Administration (FAA) to establish\ `reasonable rules <https://www.modelaircraft.org/aboutama/gov.aspx>`__\ for the use
of amateur UAVs. Each AMA chapter and field may have slightly different
policies, but it's possible to fly and test air frames and some
technology on AMA fields without violating the association's (or
FAA/NAS) rules.

**Arduino**: An open source embedded processor project. Includes a
hardware standard currently based on the Atmel Atmega168 microprocessor
and necessary supporting hardware, and a software programming
environment based on the C-like Processing language. Official site
is \ `here <http://www.arduino.cc/en/>`__.

**APM (AutoPilot Mega)**: Autopilot providing capabilities for
stabilized flight, position maintenance and automated mission (waypoint)
path following.

**ATC**: This could be the Atitude Control library in Copter with params starting with "ATC\_" or it could mean Air Traffic Control. Usually located at an airport control tower but can also be an app or service such as \ `AirMap <http://www.airmap.com>`__ or \ `Altitude Angel <http://www.altitudeangel.com>`__.

**Copter**: Rotary-wing autopilot software variant of the ArduPilot
project.

**Plane**: Fixed-wing autopilot software variant of the ArduPilot
project.

**Rover**: Ground and water autopilot software variant of the ArduPilot
project.

**BEC**: Battery Elimination Circuit. A voltage regulator found in ESCs
(see below) and as a stand-alone product. Designed to provide constant
5v voltage for RC equipment, autopilots and other onboard electronics.

**Bootloader**: Special software code stored in non-volatile memory in a
microprocessor that can interface with a PC to download a user's
program. Also see Firmware.

**COA**: Certificate of Authorization. A FAA approval for a UAV flight.
See
the \ `faa.gov <http://www.faa.gov/about/office_org/headquarters_offices/ato/service_units/systemops/aaim/organizations/uas/coa/>`__ web
site for more details and the \ `DIY Drones Regulatory FAQ <https://www.diydrones.com/profiles/blogs/regulatory-faq>`__.

**DCM**: Direction Cosine Matrix. A algorithm that is a less processing
intensive equivalent of the Kalman Filter.
See \ `this <https://diydrones.com/forum/topics/robust-estimator-of-the>`__ for
more.

**Eagle file**: The schematic and PCB design files (and related files
that tell PCB fabs how to create the boards) generated by the
free \ `Cadsoft Eagle <http://www.cadsoftusa.com/>`__ program. This is
the most common standard used in the open source hardware world,
although, ironically, it's not open source software itself. Needless to
say, this is not optimal, and the Eagle software is clumsy and hard to
learn. One hopes that an open source alternative will someday emerge.

**ESC**: Electronic Speed Control. Device to control the motor in an
electric aircraft. Serves as the connection between the main battery and
the RC receiver. Usually includes a BEC, or Battery Elimination Circuit,
which provides power for the RC system and other onboard electronics,
such as an autopilot.

**Firmware**: The software or sketch that is loaded into the
non-volatile memory of microprocessor based products. It is called
'firmware' because it stays in the non-volatile memory even if power is
removed - thus 'non' - volatile. In the case of the autopilots, it is
the 'program' or application (App to smart phone users) that determines
what the auto pilot does, and how.

**FPV**: First-person view. A technique that uses an onboard video
camera and wireless connection to the ground allow a pilot on the ground
with video goggles to fly with a cockpit view.

**FTDI**: A standard to convert USB to serial communications. Available
as a chip for boards that have a USB connector, or in
a \ `cable <http://store.jdrones.com/cable_ftdi_6pin_5v_p/cblftdi5v6p.htm>`__ to
connected to breakout pins. FTDI stands for Future Technology Devices
International, which is the name of the company that makes the chips.

**GCS**: Ground Control Station. Software running on a computer on the
ground that receives telemetry information from an airborne UAV and
displays its progress and status, often including video and other sensor
data. Can also be used to transmit in-flight commands to the UAV.

**Hard Iron magnetic distortion**: distortions that arise from magnets
or magnetized metals on the airframe that affect the compass. These
distortions remain in the same location relative to the compass for all
heading orientations. These distortions can be mostly compensated for by
adding constant offsets to the values returned from the 3d magnetometer
(compass).

**HIL (Hardware-in-the-loop simulation)**: Doing a simulation where
software running on another computer generates data that simulates the
data that would be coming from an autopilot's sensors. The autopilot is
running and doesn't "know" that the data is simulated, so it responds
just as it would to real sensor data. Hardware-in-the-loop uses the
physical autopilot hardware connected to a simulator, as opposed to
simulating the autopilot in software, too. In an "open loop" simulation,
the software simulator feeds data to the hardware autopilot; in a
"closed loop" simulation, the hardware feeds data back to the software
simulator, too.

**I2C**: A serial bus that allows multiple low speed peripherals, such
as sensors, to be connected to a microprocessor.
See \ `this <https://en.wikipedia.org/wiki/I%C2%B2C>`__ for more.

**IDE**: An integrated development environment, such as
the \ `Arduino <https://www.arduino.cc/en/Main/Software>`__ editor/downloader/serial
monitor software. Often includes a debugger.

**IMU**: An inertial measurement unit such as the ArduPilot
OilPan. Usually has at least three accelerometers (measuring the gravity
vector in the x,y and z dimensions) and two gyros (measuring rotation
around the tilt and pitch axis). Neither are sufficient by themselves,
since accelerometers are thrown off by movement (ie, they are "noisy"
over short periods of time), while gyros drift over time. The data from
both types of sensors must be combined in software to determine true
aircraft attitude and movement to create an AHRS (see above). One
technique for doing this is the Kalman filter (see below). Now
superseded by Autopilots which include CPU and sensors in one
unit.

**Inner loop/Outer loop**: Usually used to refer to the stabilization
and navigation functions of an autopilot. The stabilization function
must run in real-time and as often as 100 times a second ("inner loop"),
while the navigation function can run as infrequently as once per second
and can tolerate delays and interruptions ("outer loop").

**INS**: Inertial Navigation System. A way to calculate position based
on an initial GPS reading followed by readings from motion and speed
sensors using dead reckoning. Useful when GPS is not available or has
temporarily lost its signal.

**ICSP: In Circuit Serial Programmer**. A way to load code to a
microprocessor. Usually seen as a six-pin (two rows of three) connector
on a PCB. To use this, you need a programmer, such as this one, that
uses the SPI (Serial Peripheral Interface) standard.

**Kalman Filter**: A relatively complicated algorithm that, in our
applications, is primarily used to combine accelerometer and gyro data
to provide an accurate description of aircraft attitude and movement in
real time.
See \ `this <http://tom.pycke.be/mav/71/kalman-filtering-of-imu-data>`__ for
more.

**LOS**: Line of Sight. See VLOS below.

**LiPo**: Lithium Polymer battery, aka LiPoly. Variants include Lithium
Ion (Li-Ion) battery. This battery chemistry offers more power and
lighter weight than NiMh and NiCad batteries.

**MAVLink**. The Micro Air Vehicle communications protocol used by the
Copter and Plane line of autopilots.
See \ `here <http://qgroundcontrol.org/mavlink/start>`__ for more info
on MAVLink.

**MAV**: Micro Air Vehicle. A small UAV.
More \ `here <https://en.wikipedia.org/wiki/Micro_air_vehicle>`__.

**NMEA**: National Marine Electronics Association standard for GPS
information. When we refer to "NMEA sentences", we're talking about
ASCII strings from a GPS module that look like this:
$GPGGA,123519,4807.038,N,01131.000,E,1,08,0.9,545.4,M,46.9,M,,\ **47**

**Oilpan**: An arduino style shield meant to be paired with the
ArduPilotMega. Contained the majority of the sensors (gyos,
accelerometers, barometer, etc) that allow the ArduPilotMega to function
as an autopilot, now superseded by subsequent Autopilots that
incorporate CPU and sensors in one board.

**OSD**: On-screen display. A way to integrate data (often telemetry
information) into the real-time video stream the aircraft is sending to
the ground.

**PCB**: Printed circuit board. In our use, a specialized board designed
and "fabbed" for a dedicated purpose, as opposed to a breadboard or
prototype board, which can be used and resused for many projects.

**PCM**: Pulse Code Modulation: The technique some modern RC
transmitters/receivers communicate the RC channels information. It is
transmitted digitally using a digital code to represent the channel
number, position of the transmitter stick or switch, and sometimes other
information. Some modern RC systems also provide digital signals to
control digital servos - typically specific to each manufacturer.

**PDB**: Power Distribution Board. A board used in multicopters to
distribute power to multiple ESCs.

**PIC**: Pilot in Command. Refers to a FAA requirement that UAVs stay
under a pilot's direct control if they are flying under the recreational
exemption to COA approval. See Line of Sight above. (Not to be confused
with the PIC processor series by Microchip)

**PID**: Proportional/Integral/Derivative control method. A machine
control algorithm that allows for more accurate sensor-motion control
loops and less overcontrol.
See \ `this <https://en.wikipedia.org/wiki/PID_controller>`__ for more.

**POI**: Point of Interest. Designates a spot that a UAV should keep a camera pointed towards.

**PPM**: `Pulse Position Modulation <https://en.wikipedia.org/wiki/Pulse-position_modulation>`__.
The square-wave pulse train used to transmit multiple channels of
information between some RC transmitters and receivers. Some RC
receivers provide a PPM output (sometimes referred to as the PPM Sum)
which can be used on Pixhawk-series boards. Other receivers convert the PPM
signal and only provide PWM signals for each channel.

**PWM**: Pulse Width Modulation. The square-wave signals used in RC
control to drive servos and speed controllers. There is one PWM signal
for each channel. The width varies from 1000 to 2000 microseconds, depending on the RC manufacturer.

**PX4FMU/PX4IO**: First version of Pixhawk-series autopilots (FMUv1). Discontinued.

**RTL**: Return to Launch. Fly back to the "home" location where the aircraft took off.

**SiRF III**: The standard used by most modern GPS modules. Includes
!SiRF III binary mode, which is an alternative to the ASCII-based NMEA
standard described above.

**Sketch**: The program files, drivers and other code generated by the
Arduinio IDE for a single project.

**SVN**: Short for the Subversion version-control repository used by the
DIY Drones and other teams for source code.

**Telemetry System**: A two way radio system to allow flight data to be
sent from your aircraft and also to allow control or adjustment
information to be sent back to it from a "ground station", commonly a
laptop computer. See the :ref:`telemetry landing page <common-telemetry-landingpage>` for options.

**Thermopile**: An infrared detector. Often used in pairs in UAVs to
measure tilt and pitch by looking at differences in the infrared
signature of the horizon fore and aft and on both sides. This is based
on the fact that there is always an infrared gradient between earth and
sky, and that you can keep a plane flying level by ensuring that the
readings are the same from both sensors in each pair, each looking in
opposite directions. These have been largely displaced by electronic
gyros and are no longer in common use.

**UAV**: Unmanned Aerial Vehicle. In the military, these are
increasingly called Unmanned Aerial Systems (UAS), to reflect that the
aircraft is just part of a complex system in the air and on the ground.
Ground-based autonomous robots are called Unmanned Ground Vehicles
(UGVs) and robot submersibles are called Autonomous Underwater Vehicles
(AUVs). Robot boats are called Unmanned Surface Vehicles (USVs).

**VLOS**: Visual Line of Sight. The pilot's ability to see an aircraft
from the ground well enough to control it, without the use of artificial
visual aids (aside from glasses). Required by FAA regs.

**WAAS**: Wide Area Augmentation System. A system of satellites and
ground stations that provide GPS signal corrections, giving up to five
times better position accuracy than uncorrected GPS.
See \ `this <https://en.wikipedia.org/wiki/Wide_Area_Augmentation_System>`__ for
more.

**Xbee**: The commercial name of the recommend ZigBee-compatible radio
modems commonly used by amateur UAVs. They can be found at
`sparkfun <https://www.sparkfun.com/products/10421>`__ although
remember you also need a board to mount it on like this one
from \ `sparkfun <https://www.sparkfun.com/products/11812>`__.

**ZigBee**: A wireless communications standard, which has longer range
than Bluetooth but lower power consumption than WiFi.


[copywiki destination="copter,plane,rover,planner,planner2,antennatracker,dev,ardupilot,mavproxy"]
